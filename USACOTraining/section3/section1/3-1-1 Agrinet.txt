/*
ID: haochen6
LANG: JAVA
TASK: agrinet
*/
import java.io.*;
import java.util.*;
import java.lang.Math;
public class agrinet{
  public static void main (String [] args) throws IOException {
    
    Scanner f = new Scanner(new File("agrinet.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("agrinet.out")));
    int N = f.nextInt();
    int[][] matrix = new int[N + 1][N + 1];
    for(int i = 0; i < N; i++){
        for(int j = 0; j < N; j++){
            matrix[i + 1][j + 1] = f.nextInt();
        }
    }
    PriorityQueue<Edge> pq = new PriorityQueue<Edge>();
    HashSet<Integer> set = new HashSet<Integer>();
    for(int i = 2; i < N + 1; i++){
        set.add(i);
    }
    for(int i = 1; i < N + 1; i++){
        if(matrix[1][i] != 0){
            pq.add(new Edge(1, i, matrix[1][i]));
        }
    }
    int ans = 0;
    while(set.isEmpty() == false){
        Edge current = pq.poll();
        if(set.contains(current.b)){
            set.remove(current.b);
            ans += current.length;
            for(int i = 1; i < N + 1; i++){
                if(matrix[current.b][i] != 0 && set.contains(i)){
                    pq.add(new Edge(current.b, i, matrix[current.b][i]));
                }
            }
        }
    }
    out.println(ans);
    out.close();
  }
}


class Edge implements Comparable<Edge>{
    int a;
    int b;
    int length;
    public Edge(int x, int y, int l){
        a = x;
        b = y;
        length = l;
    }
    
    public int compareTo(Edge other){
        return this.length - other.length;
    }
}